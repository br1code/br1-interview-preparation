services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '5000:80'
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - VideoStorage__FilePath=/videos/
      - CorsSettings__AllowedOrigins=${ALLOWED_ORIGINS}
    volumes:
      - ./videos:/videos/
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./client/br1-interview-preparation
      dockerfile: Dockerfile
      args:
        API_URL: ${API_URL}
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - '3000:3000'
    depends_on:
      - api
    networks:
      - app-network

networks:
  app-network:

volumes:
  db-data:
